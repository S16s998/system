<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>